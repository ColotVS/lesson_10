public class lesson_10_21 {
    //Метод String.format() и класс StringFormatter
    //И еще один интересный метод класса String — format().
    //
    //Допустим, у вас есть различные переменные с данными. Как вывести их на экран одной строкой?
    //Например, у нас есть данные (левая колонка) и желаемый вывод (правая колонка):

    //Код	                                    Вывод на экран
    static String name = "Amigo";               //User = {name: Amigo, age: 12 years, friend: Diego, weight: 200 kg.}
    static int age = 12;
    static String friend = "Diego";
    static int weight = 200;
    static int height = 10;
    static int width = 20;

    //Скорее всего, ваш код будет выглядеть примерно так:
    public static void main(String[] args) {
        System.out.println("User = {name: " + name + ", age:" + age + " years, friend: " + friend+", weight: " + weight + " kg.}");
        System.out.println(String.format("Age=%d, Name=%s", age, name)); //Age=12, Name=Amigo
        System.out.printf("Width=%d, Height=%d%n", width, height);       //Width=20, Height=10
        String.format("Fullname=%s", name);                              //Fullname=Amigo

        //В метод format() первым параметром передают строку-шаблон, которая содержит весь нужный текст, а в местах,
        //где нужно вставлять данные, написаны специальные символы типа %d, %s и т.п.
        //
        //Вот эти %s и %d метод format() и заменяют на параметры, которые идут следом за строкой-шаблоном.
        //Если нужно подставить строку, мы пишем %s, если число — %d. Пример:

        String s = String.format("a=%d, b=%d, c=%d", 1, 4, 3);            //s будет равна "a=1, b=4, c=3"

        //Эти параметры указывают на тип данных, но есть еще параметры, которые указывают на порядок данных.
        //Чтобы взять параметр по его номеру (нумерация начинается с единицы), нужно записать %1$d вместо %d. Пример:
        String c = String.format("a=%3$d, b=%2$d, c=%d", 11, 12, 13);     //c будет равна "a=13, b=12, c=11"
    }
    //Такой код не слишком читабельный. Более того, если бы имена переменных были длиннее, код стал бы еще сложнее

    //Однако в реальных программах такая ситуация встречается часто, поэтому я хочу рассказать о способе,
    //как проще и короче записать этот код.

    //String.format
    //У класса String есть статический метод format(): он позволяет задать шаблон объединения строки с данными.
    //Общий вид этой команды такой:
    //String имя = String.format(шаблон, параметры);

    //Вот краткий список параметров, которые можно использовать внутри шаблона:
    //Символ	Обозначение
    //%s        String
    //%d        целое число: byte, short, int, long
    //%f        вещественное число: float, double
    //%b        boolean
    //%c        char
    //%t        Date
    //%%        Символ %


}
