public class lesson_10_25 {
    //StringBuilder в Java

    //Строки в Java — это неизменяемые объекты (immutable).
    //Так было сделано для того, чтобы класс-строку можно было сильно оптимизировать и использовать повсеместно.

    //Например, в качестве ключей у коллекции HashMap рекомендуется использовать только immutable-типы.

    //Однако часто возникают ситуации, когда программисту все же было бы удобнее иметь String-класс, который можно менять.
    //Который не создает новую подстроку при каждом вызове его метода.

    //Например, у нас есть очень большая строка и мы часто дописываем что-то в ее конец.
    //В этом случае даже коллекция символов (ArrayList<Character>) может быть эффективнее,
    //чем постоянное пересоздание строк и конкатенации объектов типа String.

    //Именно поэтому в язык Java все же добавили тип String, который можно менять. Называется он StringBuilder.

    //Чтобы создать объект StringBuilder на основе существующей строки, нужно выполнить команду вида:
    //StringBuilder имя = new StringBuilder(строка);

    //Чтобы создать пустую изменяемую строку, нужно воспользоваться командой вида:
    //StringBuilder имя = new StringBuilder();

    //Список методов
    //Класс StringBuilder имеет два десятка полезных методов, вот самые важные из них:
    //Метод	                                                          Описание
    //StringBuilder append(obj)                                       Преобразовывает переданный объект в строку и добавляет к текущей строке
    //StringBuilder insert(int index, obj)                            Преобразовывает переданный объект в строку и вставляет в текущую строку
    //StringBuilder replace(int start, int end, String str)           Заменяет часть строки, заданную интервалом start..end на переданную строку
    //StringBuilder deleteCharAt(int index)                           Удаляет из строки символ под номером index
    //StringBuilder delete(int start, int end)                        Удаляет из строки символы, заданные интервалом
    //int indexOf(String str, int index)                              Ищет подстроку в текущей строке
    //int lastIndexOf(String str, int index)                          Ищет подстроку в текущей строке с конца
    //char charAt(int index)                                          Возвращает символ строки по его индексу
    //String substring(int start, int end)                            Возвращает подстроку, заданную интервалом
    //StringBuilder reverse()                                         Разворачивает строку задом наперед.
    //void setCharAt(int index, char)                                 Изменяет символ строки, заданный индексом на переданный
    //int length()                                                    Возвращает длину строки в символах

    //Краткое описание методов

    //Добавление к строке
    //Чтобы что-то добавить к изменяемой строке (StringBuilder), нужно воспользоваться методом append().
    //Чтобы преобразовать объект StringBuilder к строке типа String, нужно просто вызвать у него метод toString()
    // удалить символ в изменяемой строке, вам нужно воспользоваться методом deleteCharAt().
    //Чтобы заменить часть строки на другую, есть метод replace(int begin, int end, String str)
    public static void main(String[] args) {
        StringBuilder builder = new StringBuilder("Привет"); //Привет
        builder.append(" Пока ");                            //Привет Пока
        builder.append(123);                                 //Привет Пока 123
        builder.deleteCharAt(2);                       //Првет Пока 123
        builder.replace(0, 5, "Hello!");       //Hello! Пока 123
        System.out.println(builder.toString());
    }
}
