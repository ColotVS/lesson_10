public class lesson_10_03 {
    //Литералы строк

    //В коде также можно задавать и целые строки текста.
    //Чтобы компилятор считал строку именно данными (строкой текста), а не частью кода,
    //вся строка с двух сторон обрамляется двойными кавычками.

    //Если в одной строке кода много двойных кавычек, они разбиваются на пары.
    //Первая двойная кавычка обозначает начало литерала, следующая за ней — конец литерала.
    //Следующая за ней — опять начало нового литерала, следующая за ней — конец второго литерала. И т.д.
    //Каждый такой литерал имеет тип String.

    //Код	                            Пояснение
    //"+" + "+" + "+" + "+" + "+"       В строке 5 литералов, каждый из которых состоит из одного символа +
    //""                                Литерал пустая строка. Строка, в которой нет символов.
    //"2+3" + "-5"                      Тут два литерала. Результатом будет строка 2+3-5, но не число
    //"return" + ";"                    Тут тоже два литерала. Оператора return тут нет.

    //Если строковый литерал слишком длинный, его можно разбить на несколько строк и склеить «оператором плюс»:

    //String s = "Буря мглою небо кроет "    Если вывести эту строку на экран, весь текст выведется в одну строку!
    //         + "Вихри снежные крутя "
    //         + "То как зверь она завоет "
    //         + "То заплачет как дитя";

    //В классе Solution объявлено и проинициализировано публичное строковое поле. Но строка слишком длинная и неудобочитаемая.
    //Для лучшей читаемости нужно разделить её на 5 подстрок и склеить их "оператором +" (конкатенация строк) в таком виде:

    //первая строка: "Всегда пишите код так, "
    //вторая строка: "будто сопровождать его будет "
    //третья строка: "склонный к насилию психопат, "
    //четвертая строка: "который знает, где вы живете. "
    //пятая строка: "Martin Golding"
    public static void main(String[] args) {
        String text = "Всегда пишите код так, " + "будто сопровождать его будет " + "склонный к насилию психопат, " + "который знает, где вы живете. " + "Martin Golding";
    }
}
