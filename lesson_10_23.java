public class lesson_10_23 {
    //String Pool

    //Все строки, которые были заданы в коде в виде литералов, во время работы программы хранятся в памяти в так называемом StringPool.
    //StringPool — это специальный массив для хранения строк. Цель его создания — оптимизация хранения строк:

    //Во-первых, строки, заданные в коде, нужно все-таки где-то хранить.
    //Код — это команды, а данные (тем более такие большие как строки) нужно хранить в памяти отдельно от кода.
    //В коде фигурируют только ссылки на объекты-строки.

    //Во-вторых, все одинаковые литералы можно хранить в памяти только один раз. Так оно и работает.
    //Когда код вашего класса загружается Java-машиной, все строковые литералы добавляются в StringPool, если их там еще нет.
    //Если уже есть, просто используется ссылка на строку из StringPool.

    //Поэтому если в своем коде вы присвоите нескольким String-переменным одинаковые литералы, переменные будут содержать одинаковые ссылки.
    //В StringPool литерал будет добавлен только один раз,
    //во всех остальных случаях будет браться ссылка на уже загруженную в StringPool строку.

    //Код	                                    Работа с StringPool
                                                //String[] pool = {"Привет", "Пока"};
    String a = "Привет";                        //a = pool[0];
    String b = "Привет";                        //b = pool[0];
    String c = "Пока";                          //c = pool[1];

    //Именно поэтому переменные a и b будут хранить одинаковые ссылки.

    //Метод intern()

    //Ну и самое интересное: вы можете программно добавить любую строку в StringPool.
    //Для этого нужно просто вызвать метод intern() у String-переменной.

    //Метод intern() добавит строку в StringPool, если ее еще там нет, и вернет ссылку на строку из StringPool.

    //Если в StringPool добавить с помощью метода intern() две идентичные строки, метод вернет одинаковые ссылки.
    //Это можно использовать, чтобы сравнивать строки по ссылке. Пример:
    public static void main(String[] args) {
        String a = new String("Привет");
        String b = new String("Привет");
        System.out.println(a == b); //false

        String a2 = new String("Привет");
        String b2 = new String("Привет");

        String t1 = a2.intern();
        String t2 = b2.intern();
        System.out.println(a2 == b2); //false
        System.out.println(t1 == t2); //true
    }

}
